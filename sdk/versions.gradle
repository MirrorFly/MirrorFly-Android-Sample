/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.android = '1.1.0'
versions.recyclerview = '1.2.0'
versions.core_ktx = "1.2.0"
versions.viewmodel_ktx = "2.2.0"
versions.livedata_ktx = "2.2.0"
versions.coroutines = "1.3.8"
versions.material = '1.0.0'
versions.smackVersion = '4.2.4'
versions.signalEncryption = '4.2.1-beta1'
versions.playservice = '17.0.0'
versions.okhttp = '4.2.0'
versions.retrofit = '2.6.1'
versions.coroutine_call_adapter = '0.9.2'
versions.googlegson = '2.8.5'
versions.glide = '4.11.0'
versions.glideokhttp3 = '4.11.0'
versions.interceptor = '3.14.3'
versions.junit = '4.13.2'
versions.extjunit = '1.1.1'
versions.espressowebrtc = '3.1.0'
versions.espresso = '3.2.0'
versions.espressobioauth = '3.3.0-alpha03'
versions.multidex = '2.0.1'
versions.greenrobot = '2.1.0'
versions.hypertrack = '0.0.10'
versions.squareupassert = '1.0.0'
versions.stetho = '1.3.1'
versions.socket = '0.6.0'
versions.webrtc = '1.0.32006'
versions.firebaseauth = '19.2.0'
versions.firebaseconfig = '19.0.1'
versions.firebasePerf = '19.0.5'
versions.firebasecore = '17.2.2'
versions.dynamiclinks = '19.0.0'
versions.firebasemessaging = '20.1.0'
versions.bottomsheet = '1.0@aar'
versions.libphonenumber = '8.9.14'
versions.gson = '2.8.5'
versions.ShortcutBadger = '1.1.22@aar'
versions.jsoup = '1.11.3'
versions.natllang = '21.0.3'
versions.natllangsmartrply = '20.0.6'
versions.biometric = '1.0.0'
versions.opacapp = '27.1.1'
versions.crashlytics = '17.2.1'
versions.analytics = '17.5.0'
versions.Photoview = '2.1.3'
versions.photoviewlib = '1.2.4'
versions.zxing = '3.6.0'
versions.emoji = '1.4.2'
versions.jobdispatcher = '0.8.5'
versions.observablescrollview = '1.5.0'
versions.cardview = '1.0.0'
versions.constraintlayout = '1.1.3'
versions.legacy = '1.0.0'
versions.lifecycle = '2.2.0'
versions.daggerVersion = '2.41'
versions.rxjava = '2.2.15'
versions.rxandroid = '2.1.1'
versions.kotlin = '1.3.61'
versions.rxbinding = '3.1.0'
versions.pdfviewer = '2.8.2'
versions.work_version = '2.4.0'
versions.conscrypt = '2.2.1'
versions.exif_version = '25.1.0'


ext.versions = versions

def smack = [:]
smack.android = "org.igniterealtime.smack:smack-android:$versions.smackVersion"
smack.tcp = "org.igniterealtime.smack:smack-tcp:$versions.smackVersion"
smack.im = "org.igniterealtime.smack:smack-im:$versions.smackVersion"
smack.extensions = "org.igniterealtime.smack:smack-extensions:$versions.smackVersion"
smack.sasl = "org.igniterealtime.smack:smack-sasl-provided:$versions.smackVersion"
smack.omemo = "org.igniterealtime.smack:smack-omemo:$versions.signalEncryption"
smack.omemoSignal = "org.igniterealtime.smack:smack-omemo-signal:$versions.signalEncryption"
smack.signalProtocal = 'org.whispersystems:signal-protocol-java:2.4.0'
deps.smack = smack

def playservice = [:]
playservice.auth = "com.google.android.gms:play-services-auth:$versions.playservice"
playservice.identity = "com.google.android.gms:play-services-identity:$versions.playservice"
playservice.gcm = "com.google.android.gms:play-services-gcm:$versions.playservice"
playservice.maps = "com.google.android.gms:play-services-maps:$versions.playservice"
playservice.location = "com.google.android.gms:play-services-location:$versions.playservice"
deps.playservice = playservice

def android = [:]
android.appcompat = "androidx.appcompat:appcompat:$versions.android"
android.resources = "androidx.appcompat:appcompat-resources:$versions.android"
android.annotation = "androidx.annotation:annotation:$versions.android"
android.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
android.material = "com.google.android.material:material:$versions.material"
deps.android = android

def squareup = [:]
squareup.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
squareup.calladapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.coroutine_call_adapter"
squareup.gsonconv = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
squareup.gson = "com.google.code.gson:gson:$versions.googlegson"
squareup.assert = "com.squareup.assertj:assertj-android:$versions.squareupassert"
squareup.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
squareup.conscrypt = "org.conscrypt:conscrypt-android:$versions.conscrypt"
deps.squareup = squareup

def bumptechglide = [:]
bumptechglide.glide = "com.github.bumptech.glide:glide:$versions.glide"
bumptechglide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
bumptechglide.annotations = "com.github.bumptech.glide:annotations:$versions.glide"
bumptechglide.okhttp3 = "com.github.bumptech.glide:okhttp3-integration:$versions.glideokhttp3"
deps.bumptechglide = bumptechglide

def junit = [:]
junit.junit = "junit:junit:$versions.junit"
junit.extjunit = "androidx.test.ext:junit:$versions.extjunit"
deps.junit = junit

def multidex = [:]
multidex.multidex = "androidx.multidex:multidex:$versions.multidex"
deps.multidex = multidex

def greenrobot = [:]
greenrobot.greendao = "de.greenrobot:greendao:$versions.greenrobot"
deps.greenrobot = greenrobot

def stetho = [:]
stetho.stetho = "com.facebook.stetho:stetho:$versions.stetho"
stetho.okhttp3 = "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
deps.stetho = stetho

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.webrtccore = "androidx.test.espresso:espresso-core:$versions.espressowebrtc"
espresso.bioauthcore = "androidx.test.espresso:espresso-core:$versions.espressobioauth"
deps.espresso = espresso

def okhttp3 = [:]
okhttp3.interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.interceptor"
deps.okhttp3 = okhttp3

def google = [:]
google.webrtc = "org.webrtc:google-webrtc:$versions.webrtc"
deps.google = google

def socket = [:]
socket.ioclient = "com.github.nkzawa:socket.io-client:$versions.socket"
deps.socket = socket

def hypertrack = [:]
hypertrack.hyperlog = "com.hypertrack:hyperlog:$versions.hypertrack"
deps.hypertrack = hypertrack

def firebase = [:]
firebase.auth = "com.google.firebase:firebase-auth:$versions.firebaseauth"
firebase.config = "com.google.firebase:firebase-config:$versions.firebaseconfig"
firebase.core = "com.google.firebase:firebase-core:$versions.firebasecore"
firebase.message = "com.google.firebase:firebase-messaging:$versions.firebasemessaging"
firebase.natllang = "com.google.firebase:firebase-ml-natural-language:$versions.natllang"
firebase.natllangsmartrply = "com.google.firebase:firebase-ml-natural-language-smart-reply-model:$versions.natllangsmartrply"
firebase.jobdispatcher = "com.firebase:firebase-jobdispatcher:$versions.jobdispatcher"
firebase.dynamiclinks = "com.google.firebase:firebase-dynamic-links:$versions.dynamiclinks"
firebase.performance = "com.google.firebase:firebase-perf:$versions.firebasePerf"
firebase.crashlytics = "com.google.firebase:firebase-crashlytics:$versions.crashlytics"
firebase.analytics = "com.google.firebase:firebase-analytics:$versions.analytics"
deps.firebase = firebase

def michaelrocks = [:]
michaelrocks.libphonenumber = "io.michaelrocks:libphonenumber-android:$versions.libphonenumber"
deps.michaelrocks = michaelrocks

def gson = [:]
gson.gson = "com.google.code.gson:gson:$versions.gson"
deps.gson = gson

def leolin = [:]
leolin.ShortcutBadger = "me.leolin:ShortcutBadger:$versions.ShortcutBadger"
deps.leolin = leolin

def jsoup = [:]
jsoup.jsoup = "org.jsoup:jsoup:$versions.jsoup"
deps.jsoup = jsoup

def biometric = [:]
biometric.biometric = "androidx.biometric:biometric:$versions.biometric"
deps.biometric = biometric

def opacapp = [:]
opacapp.toolbar = "net.opacapp:multiline-collapsingtoolbar:$versions.opacapp"
deps.opacapp = opacapp

def chrisbanes = [:]
chrisbanes.photoview = "com.github.chrisbanes:PhotoView:$versions.Photoview"
chrisbanes.photoviewlib = "com.github.chrisbanes.photoview:library:$versions.photoviewlib"
deps.chrisbanes = chrisbanes

def journeyapps = [:]
journeyapps.zxing = "com.journeyapps:zxing-android-embedded:$versions.zxing"
deps.journeyapps = journeyapps

def rockerhiew = [:]
rockerhiew.emoji = "io.github.rockerhieu:emojicon:$versions.emoji"
deps.rockerhiew = rockerhiew

def ksoichiro = [:]
ksoichiro.observablescrollview = "com.github.ksoichiro:android-observablescrollview:$versions.observablescrollview"
deps.ksoichiro = ksoichiro

def cardview = [:]
cardview.cardview = "androidx.cardview:cardview:$versions.cardview"
deps.cardview = cardview

def constraintlayout = [:]
constraintlayout.constraintlayout = "androidx.constraintlayout:constraintlayout:1.1.3"
deps.constraintlayout = constraintlayout

def legacy = [:]
legacy.legacysupport = "androidx.legacy:legacy-support-v4:$versions.legacy"
deps.legacy = legacy

def reactive = [:]
reactive.rxjava = "io.reactivex.rxjava2:rxjava:$versions.rxjava"
reactive.rxandroid = "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
deps.reactive = reactive

def dagger2 = [:]
dagger2.dagger = "com.google.dagger:dagger:$versions.daggerVersion"
dagger2.compiler = "com.google.dagger:dagger-compiler:$versions.daggerVersion"
dagger2.android = "com.google.dagger:dagger-android:$versions.daggerVersion"
dagger2.androidsupport = "com.google.dagger:dagger-android-support:$versions.daggerVersion"
dagger2.androidprocessor = "com.google.dagger:dagger-android-processor:$versions.daggerVersion"
deps.dagger2 = dagger2

def lifecycle = [:]
lifecycle.extension = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
deps.lifecycle = lifecycle

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
deps.kotlin = kotlin

def rxbinding3 = [:]
rxbinding3.base = "com.jakewharton.rxbinding3:rxbinding:$versions.rxbinding"
rxbinding3.core = "com.jakewharton.rxbinding3:rxbinding-core:$versions.rxbinding"
rxbinding3.appcompat = "com.jakewharton.rxbinding3:rxbinding-appcompat:$versions.rxbinding"
rxbinding3.recyclerview = "com.jakewharton.rxbinding3:rxbinding-recyclerview:$versions.rxbinding"
rxbinding3.material = "com.jakewharton.rxbinding3:rxbinding-material:$versions.rxbinding"
deps.rxbinding3 = rxbinding3

def coroutines = [:]
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
deps.coroutines = coroutines

def ktx = [:]
ktx.viewmodelscope = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.viewmodel_ktx"
ktx.livedatascope = "androidx.lifecycle:lifecycle-livedata-ktx::$versions.livedata_ktx"
deps.ktx = ktx

def workmanager = [:]
workmanager.wm = "androidx.work:work-runtime-ktx:$versions.work_version"
deps.workmanager = workmanager

def pdfviewer = [:]
pdfviewer.pdf = "com.github.barteksc:android-pdf-viewer:$versions.pdfviewer"
deps.pdfviewer = pdfviewer

def utility = [:]
deps.utility = utility

def drive = [:]
drive.http = 'com.google.http-client:google-http-client-gson:1.26.0'
drive.api = 'com.google.api-client:google-api-client-android:1.26.0'
drive.service = 'com.google.apis:google-api-services-drive:v3-rev136-1.25.0'
drive.avoidconflict = 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
deps.drive = drive

def exif=[:]
exif.support ="com.android.support:exifinterface:$versions.exif_version"
deps.exif=exif